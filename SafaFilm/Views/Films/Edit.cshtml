@model SafaFilm.Models.Films

@{
    ViewBag.Title = Model.Title;
}

<h2>ویرایش @ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FilmID)

        <div class="form-group">
            @Html.LabelFor(model => model.imgpic, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <input type="hidden" value="@Model.imgpic" name="oldimg" id="oldimg" />
                <input type="file" class="form-control" name="upfile" id="upfile" />
                @Html.ValidationMessageFor(model => model.imgpic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Actress, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Actress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Actress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.L480, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.L480, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.L480, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.L720, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.L720, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.L720, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.L1080, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.L1080, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.L1080, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LQ1080, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LQ1080, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LQ1080, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LALL, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LALL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LALL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Translate, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Translate)
                    @Html.ValidationMessageFor(model => model.Translate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StyleID, "سبک", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("StyleID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StyleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, "محصول کشور", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-outline-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("برگشت به لیست", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
